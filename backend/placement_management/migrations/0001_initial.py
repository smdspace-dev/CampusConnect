# Generated by Django 4.2.24 on 2025-09-22 18:46

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('admin_system', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('company_type', models.CharField(choices=[('startup', 'Startup'), ('sme', 'Small & Medium Enterprise'), ('mnc', 'Multinational Corporation'), ('government', 'Government'), ('non_profit', 'Non-Profit')], default='sme', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('website', models.URLField(blank=True)),
                ('industry', models.CharField(blank=True, max_length=100)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('hr_contact_name', models.CharField(blank=True, max_length=100)),
                ('hr_contact_email', models.EmailField(blank=True, max_length=254)),
                ('hr_contact_phone', models.CharField(blank=True, max_length=15)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Companies',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='JobPosting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('requirements', models.TextField()),
                ('job_type', models.CharField(choices=[('full_time', 'Full Time'), ('part_time', 'Part Time'), ('internship', 'Internship'), ('contract', 'Contract')], default='full_time', max_length=20)),
                ('salary_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('salary_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('min_cgpa', models.DecimalField(decimal_places=2, default=6.0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('max_backlogs', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('application_deadline', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_postings', to='placement_management.company')),
                ('eligible_departments', models.ManyToManyField(blank=True, related_name='job_postings', to='admin_system.department')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TrainingProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('program_type', models.CharField(choices=[('aptitude', 'Aptitude Training'), ('technical', 'Technical Skills'), ('soft_skills', 'Soft Skills'), ('interview_prep', 'Interview Preparation'), ('resume_writing', 'Resume Writing'), ('group_discussion', 'Group Discussion')], default='technical', max_length=20)),
                ('trainer_name', models.CharField(max_length=100)),
                ('trainer_organization', models.CharField(blank=True, max_length=200)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('duration_hours', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(500)])),
                ('max_participants', models.IntegerField(default=50, validators=[django.core.validators.MinValueValidator(1)])),
                ('venue', models.CharField(blank=True, max_length=200)),
                ('is_mandatory', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('upcoming', 'Upcoming'), ('ongoing', 'Ongoing'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='upcoming', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('applied', 'Applied'), ('shortlisted', 'Shortlisted'), ('selected', 'Selected'), ('rejected', 'Rejected'), ('placed', 'Placed'), ('withdrawn', 'Withdrawn')], default='applied', max_length=20)),
                ('resume_file', models.CharField(blank=True, max_length=500)),
                ('cover_letter', models.TextField(blank=True)),
                ('applied_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True)),
                ('job_posting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='placement_management.jobposting')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_applications', to='admin_system.student')),
            ],
            options={
                'ordering': ['-applied_at'],
                'unique_together': {('student', 'job_posting')},
            },
        ),
        migrations.CreateModel(
            name='PlacementRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=200)),
                ('package_offered', models.DecimalField(decimal_places=2, max_digits=10)),
                ('joining_date', models.DateField()),
                ('location', models.CharField(blank=True, max_length=200)),
                ('is_confirmed', models.BooleanField(default=False)),
                ('offer_letter_file', models.CharField(blank=True, max_length=500)),
                ('placed_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='placements', to='placement_management.company')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='placements', to='admin_system.student')),
            ],
            options={
                'ordering': ['-placed_at'],
            },
        ),
        migrations.CreateModel(
            name='InterviewSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interview_type', models.CharField(choices=[('technical', 'Technical'), ('hr', 'HR'), ('group_discussion', 'Group Discussion'), ('aptitude', 'Aptitude Test'), ('final', 'Final Interview')], default='technical', max_length=20)),
                ('scheduled_date', models.DateTimeField()),
                ('duration_minutes', models.IntegerField(default=60, validators=[django.core.validators.MinValueValidator(15), django.core.validators.MaxValueValidator(300)])),
                ('location', models.CharField(blank=True, max_length=200)),
                ('interviewer_details', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('rescheduled', 'Rescheduled')], default='scheduled', max_length=20)),
                ('feedback', models.TextField(blank=True)),
                ('result', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interviews', to='placement_management.studentapplication')),
            ],
        ),
        migrations.CreateModel(
            name='TrainingEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrolled_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('attendance_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('final_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('certificate_issued', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('enrolled', 'Enrolled'), ('completed', 'Completed'), ('dropped', 'Dropped'), ('failed', 'Failed')], default='enrolled', max_length=20)),
                ('feedback', models.TextField(blank=True)),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='placement_management.trainingprogram')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_enrollments', to='admin_system.student')),
            ],
            options={
                'unique_together': {('program', 'student')},
            },
        ),
        migrations.CreateModel(
            name='PlacementStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_year', models.CharField(max_length=9)),
                ('total_students', models.IntegerField(default=0)),
                ('placed_students', models.IntegerField(default=0)),
                ('highest_package', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('lowest_package', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('average_package', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('companies_visited', models.IntegerField(default=0)),
                ('placement_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='placement_stats', to='admin_system.department')),
            ],
            options={
                'ordering': ['-academic_year', 'department'],
                'unique_together': {('academic_year', 'department')},
            },
        ),
    ]
