# Generated by Django 4.2.24 on 2025-09-22 18:46

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('admin_system', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TeacherProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialization', models.CharField(blank=True, max_length=200)),
                ('office_hours', models.CharField(blank=True, max_length=100)),
                ('office_location', models.CharField(blank=True, max_length=100)),
                ('research_interests', models.TextField(blank=True)),
                ('publications', models.TextField(blank=True)),
                ('is_available_for_counseling', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('staff', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_profile', to='admin_system.staff')),
            ],
        ),
        migrations.CreateModel(
            name='CourseAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(8)])),
                ('academic_year', models.CharField(max_length=9)),
                ('is_active', models.BooleanField(default=True)),
                ('assigned_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='admin_system.course')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_assignments', to='admin_system.staff')),
            ],
            options={
                'unique_together': {('teacher', 'course', 'semester', 'academic_year')},
            },
        ),
        migrations.CreateModel(
            name='CounselingSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_type', models.CharField(choices=[('academic', 'Academic Counseling'), ('career', 'Career Guidance'), ('personal', 'Personal Counseling'), ('disciplinary', 'Disciplinary')], default='academic', max_length=20)),
                ('scheduled_date', models.DateTimeField()),
                ('duration_minutes', models.IntegerField(default=30, validators=[django.core.validators.MinValueValidator(15), django.core.validators.MaxValueValidator(120)])),
                ('topic', models.CharField(max_length=200)),
                ('notes', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], default='scheduled', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='counseling_sessions', to='admin_system.student')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='counseling_sessions', to='admin_system.staff')),
            ],
        ),
        migrations.CreateModel(
            name='ClassSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(choices=[('monday', 'Monday'), ('tuesday', 'Tuesday'), ('wednesday', 'Wednesday'), ('thursday', 'Thursday'), ('friday', 'Friday'), ('saturday', 'Saturday')], max_length=10)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('room_number', models.CharField(blank=True, max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('course_assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='teacher_interface.courseassignment')),
            ],
            options={
                'ordering': ['day_of_week', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('assignment_type', models.CharField(choices=[('homework', 'Homework'), ('project', 'Project'), ('lab', 'Lab Assignment'), ('quiz', 'Quiz'), ('presentation', 'Presentation')], default='homework', max_length=20)),
                ('due_date', models.DateTimeField()),
                ('max_marks', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course_assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='teacher_interface.courseassignment')),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('is_present', models.BooleanField(default=False)),
                ('remarks', models.CharField(blank=True, max_length=100)),
                ('marked_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('course_assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='teacher_interface.courseassignment')),
                ('marked_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='marked_attendances', to='admin_system.staff')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='admin_system.student')),
            ],
            options={
                'unique_together': {('course_assignment', 'student', 'date')},
            },
        ),
        migrations.CreateModel(
            name='AssignmentSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_text', models.TextField(blank=True)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('marks_obtained', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('feedback', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('submitted', 'Submitted'), ('graded', 'Graded'), ('late', 'Late Submission')], default='pending', max_length=20)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('graded_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='teacher_interface.assignment')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignment_submissions', to='admin_system.student')),
            ],
            options={
                'unique_together': {('assignment', 'student')},
            },
        ),
    ]
